{"ast":null,"code":"var _jsxFileName = \"/Users/abhilashkhuntia/Desktop/whatsapp-clone/src/Chat.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport \"./Chat.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\nimport UseWindowDimensions from \"./UseWindowDimensions\";\nimport useSound from \"use-sound\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport Linkify from \"react-linkify\";\n\nfunction Chat() {\n  var _messages$timestamp, _messages$timestamp2, _messages$timestamp3;\n\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const {\n    roomId\n  } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [toggler, setToggler] = useState(true);\n  const displayName = localStorage.getItem(\"displayName\");\n  const [{\n    togglerState\n  }, dispatch] = useStateValue();\n  const [{\n    photoURL\n  }] = useStateValue();\n  const [emoji, setEmoji] = useState(false);\n  const [issendChecked, setIssendChecked] = useState(false);\n  const [datewise, setDateWise] = useState([]);\n  const [clientGMT, setClinetGMT] = useState(\"\");\n  const [lastseenPhoto, setLastseen] = useState(\"\"); // const [isRecChecked, setIsRecChecked]=useState(1);\n\n  const {\n    width\n  } = UseWindowDimensions();\n  var hour = 0,\n      extramin = 0,\n      minutes = 0,\n      hourly = 0,\n      GMTminutes = String(clientGMT).slice(4, 6),\n      scrl,\n      fix = 0; // console.log(GMTminutes)\n  //console.log(roomId);\n\n  const [playOn] = useSound(`${process.env.PUBLIC_URL}/send.mp3`, {\n    volume: 0.5\n  });\n  const [playOff] = useSound(`${process.env.PUBLIC_URL}/send.mp3`, {\n    volume: 0.5\n  });\n\n  const addEmoji = e => {\n    let emoji = e.native;\n    setInput(input + emoji);\n  };\n\n  const checkEmojiClose = () => {\n    if (emoji) {\n      setEmoji(false);\n    }\n  }; //console.log(photoURL);\n  // console.log(messages);\n\n\n  function getTimeZone() {\n    var offset = new Date().getTimezoneOffset(),\n        o = Math.abs(offset);\n    return (offset < 0 ? \"+\" : \"-\") + (\"00\" + Math.floor(o / 60)).slice(-2) + \":\" + (\"00\" + o % 60).slice(-2);\n  }\n\n  useEffect(() => {\n    setClinetGMT(getTimeZone()); //  console.log(clientGMT);\n  });\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n\n    if (roomId) {\n      db.collection(\"rooms\").doc(roomId).onSnapshot(snapshot => {\n        setRoomName(snapshot.data().name);\n      });\n      db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n  }, [roomId]);\n  useEffect(() => {\n    var _messages;\n\n    setLastseen((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : _messages.photoURL);\n  }, [messages]); //  console.log(lastseenPhoto);\n\n  const sendMessage = e => {\n    e.preventDefault(); // console.log(\"You Typedd >>>>\",input);\n\n    if (input.length > 0) {\n      db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n        message: input,\n        name: displayName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        photoURL: localStorage.getItem(\"photoURL\")\n      });\n      setIssendChecked(!issendChecked);\n      issendChecked ? playOff() : playOn();\n      setInput(\"\");\n    }\n  }; // for deletion in future\n  // let collectionRef = fs.collection(\"rooms\");\n  // collectionRef.where(\"name\", \"==\", name)\n  // .get()\n  // .then(querySnapshot => {\n  // querySnapshot.forEach((doc) => {\n  //     doc.ref.delete().then(() => {\n  //     console.log(\"Document successfully deleted!\");\n  //     }).catch(function(error) {\n  //     console.error(\"Error removing document: \", error);\n  //     });\n  // });\n  // })\n  // .catch(function(error) {\n  // console.log(\"Error getting documents: \", error);\n  // });\n\n\n  let blankObj = {};\n  let TotalObj = [];\n\n  if (messages.length > 0) {\n    // for( const message in messages){\n    // }\n    let checkDate = \"\";\n    let blankArray = [];\n    let dateArray = [];\n    messages.forEach(function (message, i) {\n      var _message$timestamp;\n\n      let messageDate = String(new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toUTCString()).slice(5, 12);\n\n      if (dateArray.indexOf(messageDate) === -1) {\n        dateArray.push(messageDate);\n      }\n    }); //let tempObj={};\n\n    var index = 0;\n    messages.forEach(function (message, i) {\n      var _message$timestamp2;\n\n      let messageDate = String(new Date((_message$timestamp2 = message.timestamp) === null || _message$timestamp2 === void 0 ? void 0 : _message$timestamp2.toDate()).toUTCString()).slice(5, 12); // console.log((message.timestamp+new Date()?.getTimezoneOffset()))\n\n      if (messageDate === dateArray[index] && i == messages.length - 1) {\n        blankArray.push({\n          messageData: message.message,\n          name: message.name,\n          timestamp: message.timestamp\n        });\n        blankObj[dateArray[index]] = blankArray;\n        TotalObj.push(blankObj);\n        blankObj = {};\n        blankArray = [];\n        blankArray.push({\n          messageData: message.message,\n          name: message.name,\n          timestamp: message.timestamp\n        });\n        index = index + 1;\n      } else if (messageDate == dateArray[index]) {\n        blankArray.push({\n          messageData: message.message,\n          name: message.name,\n          timestamp: message.timestamp\n        });\n      } else {\n        blankObj[dateArray[index]] = blankArray;\n        TotalObj.push(blankObj);\n        blankObj = {};\n        blankArray = [];\n        blankArray.push({\n          messageData: message.message,\n          name: message.name,\n          timestamp: message.timestamp\n        });\n\n        if (messageDate != dateArray[index] && i == messages.length - 1) {\n          blankObj[messageDate] = blankArray;\n          TotalObj.push(blankObj);\n        }\n\n        index = index + 1;\n      }\n    });\n  }\n\n  useEffect(() => {\n    setDateWise(TotalObj);\n  }, [messages]); //  console.log(TotalObj);\n  // if(Object.keys(datewise).length !== 0){\n  //     Object.entries(datewise).forEach(\n  //         ([key, value]) => {\n  //             console.log(key);\n  //             value.forEach((item,i)=>{\n  //                 console.log(item.messageData,item.name);\n  //             });\n  //         }\n  //     );\n  // }\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    } // console.log('called')\n\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  });\n  useEffect(() => {\n    setToggler(!toggler);\n  }, [togglerState]);\n  useEffect(() => {\n    scrollToBottom(); //   scrl= document.getElementById(\"chat__box\")\n    //  console.log(messagesEndRef.current.clientHeight);\n    //  scrl.scrollIntoView(false);\n  }, [messages]);\n\n  const handleDrawerToggle = () => {\n    setToggler(!toggler);\n    dispatch({\n      type: actionTypes.SET_TOGGLER,\n      togglerState: togglerState + 1\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, width < 629 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: togglerState % 2 === 0 ? \"chat\" : \"chat hide__chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    edge: \"start\",\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Avatar, {\n    src: lastseenPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, roomName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header__lastSeen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, \"last seen\", \" \", messages.length !== 0 ? (_messages$timestamp = messages[messages.length - 1].timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDate().toUTCString() : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AttachFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header__absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    edge: \"start\",\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Avatar, {\n    src: lastseenPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, roomName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header__lastSeen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, \"last seen\", \" \", messages.length !== 0 ? String((_messages$timestamp2 = messages[messages.length - 1].timestamp) === null || _messages$timestamp2 === void 0 ? void 0 : _messages$timestamp2.toDate().toUTCString()).slice(0, 22) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AttachFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, datewise.length > 0 ? datewise.map((item, i) => //  <div className=\"chat__body__daystamp\">\n  //     <p className=\"chat__body__daystamp__title\">{Object.keys(item)}</p>\n  //  </div>\n  item[Object.keys(item)].map((e, i) => {\n    var _e$timestamp, _e$timestamp2, _e$timestamp3, _e$timestamp4, _e$timestamp5, _e$timestamp6, _e$timestamp7, _e$timestamp8, _e$timestamp9, _e$timestamp10, _e$timestamp11, _e$timestamp12, _e$timestamp13, _e$timestamp14, _e$timestamp15, _e$timestamp16;\n\n    return i == 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, String(Object.keys(item)).slice(0, 2) !== \"id\" && parseInt(String(Object.keys(item)).slice(0, 2)) ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat__body__daystamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chat__body__daystamp__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 31\n      }\n    }, parseInt(String(Object.keys(item)).slice(0, 2)) == parseInt(String(new Date().getDate())) ? \"TODAY\" : Object.keys(item))) : null, /*#__PURE__*/React.createElement(\"p\", {\n      className: `chat__messages ${e.name === displayName && \"chat__reciever\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    }, e.name), /*#__PURE__*/React.createElement(Linkify, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }\n    }, e.messageData), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 31\n      }\n    }, extramin = parseInt(String(new Date((_e$timestamp = e.timestamp) === null || _e$timestamp === void 0 ? void 0 : _e$timestamp.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) > 60 ? (parseInt(String(new Date((_e$timestamp2 = e.timestamp) === null || _e$timestamp2 === void 0 ? void 0 : _e$timestamp2.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes)) % 60 : 0, minutes = parseInt(String(new Date((_e$timestamp3 = e.timestamp) === null || _e$timestamp3 === void 0 ? void 0 : _e$timestamp3.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix > 60 ? (parseInt(String(new Date((_e$timestamp4 = e.timestamp) === null || _e$timestamp4 === void 0 ? void 0 : _e$timestamp4.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix) % 60 : parseInt(String(new Date((_e$timestamp5 = e.timestamp) === null || _e$timestamp5 === void 0 ? void 0 : _e$timestamp5.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix, hour = extramin > 0 ? 1 : 0, hourly = parseInt(String(new Date((_e$timestamp6 = e.timestamp) === null || _e$timestamp6 === void 0 ? void 0 : _e$timestamp6.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT) > 24 ? (parseInt(String(new Date((_e$timestamp7 = e.timestamp) === null || _e$timestamp7 === void 0 ? void 0 : _e$timestamp7.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT)) % 24 : parseInt(String(new Date((_e$timestamp8 = e.timestamp) === null || _e$timestamp8 === void 0 ? void 0 : _e$timestamp8.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT)), hourly ? hourly % 12 : \"00\", \" : \", minutes !== 0 ? minutes < 10 ? \"0\" + minutes : minutes : \"00\", hourly > 12 ? \" PM\" : \" AM\"))) : /*#__PURE__*/React.createElement(\"p\", {\n      className: `chat__messages ${e.name === displayName && \"chat__reciever\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 27\n      }\n    }, e.name), /*#__PURE__*/React.createElement(Linkify, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 27\n      }\n    }, e.messageData), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 29\n      }\n    }, extramin = parseInt(String(new Date((_e$timestamp9 = e.timestamp) === null || _e$timestamp9 === void 0 ? void 0 : _e$timestamp9.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) > 60 ? (parseInt(String(new Date((_e$timestamp10 = e.timestamp) === null || _e$timestamp10 === void 0 ? void 0 : _e$timestamp10.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes)) % 60 : 0, minutes = parseInt(String(new Date((_e$timestamp11 = e.timestamp) === null || _e$timestamp11 === void 0 ? void 0 : _e$timestamp11.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix > 60 ? (parseInt(String(new Date((_e$timestamp12 = e.timestamp) === null || _e$timestamp12 === void 0 ? void 0 : _e$timestamp12.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix) % 60 : parseInt(String(new Date((_e$timestamp13 = e.timestamp) === null || _e$timestamp13 === void 0 ? void 0 : _e$timestamp13.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix, hour = extramin > 0 ? 1 : 0, hourly = parseInt(String(new Date((_e$timestamp14 = e.timestamp) === null || _e$timestamp14 === void 0 ? void 0 : _e$timestamp14.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT) > 24 ? (parseInt(String(new Date((_e$timestamp15 = e.timestamp) === null || _e$timestamp15 === void 0 ? void 0 : _e$timestamp15.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT)) % 24 : parseInt(String(new Date((_e$timestamp16 = e.timestamp) === null || _e$timestamp16 === void 0 ? void 0 : _e$timestamp16.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT)), hourly ? hourly % 12 : \"00\", \" : \", minutes !== 0 ? minutes < 10 ? \"0\" + minutes : minutes : \"00\", hourly > 12 ? \" PM\" : \" AM\"));\n  }) //  console.log(Object.keys(item))\n  // console.log(item[Object.keys(item)])\n  ) : // <div className=\"chat__body__daystamp\">\n  //     <p className=\"chat__body__daystamp__title\"></p>\n  //  </div>\n  // Object.entries(datewise).forEach(\n  //     ([key, value]) => {\n  //     {\n  //     value.forEach((item,i)=>{\n  //             console.log(item.messageData,item.name)\n  //         })\n  //     }\n  // }\n  // )\n  null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InsertEmoticonIcon, {\n    className: \"yellow\",\n    onClick: () => setEmoji(!emoji),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 15\n    }\n  }), emoji ? /*#__PURE__*/React.createElement(Picker, {\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 24\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    type: \"text\",\n    placeholder: \"Type a message\",\n    onChange: e => setInput(e.target.value),\n    onClick: checkEmojiClose,\n    disabled: roomName === \"Admin: Abhilash\" ? (displayName == \"Abhilash Khuntia\" ? true : false) ? false : true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 15\n    }\n  }, \"Send A message\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__footer__absolute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InsertEmoticonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    type: \"text\",\n    placeholder: \"Type a message\",\n    onChange: e => setInput(e.target.value),\n    disabled: roomName == \"Admin: Abhilash\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 15\n    }\n  }, \"Send A message\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: lastseenPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 15\n    }\n  }, roomName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"header__lastSeen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 15\n    }\n  }, messages.length !== 0 ? String((_messages$timestamp3 = messages[messages.length - 1].timestamp) === null || _messages$timestamp3 === void 0 ? void 0 : _messages$timestamp3.toDate().toUTCString()).slice(0, 22) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AttachFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__body scrollbar-juicy-peach\",\n    onClick: checkEmojiClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 11\n    }\n  }, datewise.length > 0 ? datewise.map((item, i) => item[Object.keys(item)].map((e, i) => {\n    var _String, _e$timestamp17, _e$timestamp18, _e$timestamp19, _e$timestamp20, _e$timestamp21, _e$timestamp22, _e$timestamp23, _e$timestamp24, _e$timestamp25, _e$timestamp26, _e$timestamp27, _e$timestamp28, _e$timestamp29, _e$timestamp30, _e$timestamp31, _e$timestamp32;\n\n    return i == 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, ((_String = String(Object.keys(item))) === null || _String === void 0 ? void 0 : _String.slice(0, 2)) !== \"id\" && Object.keys(item) != undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat__body__daystamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chat__body__daystamp__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 31\n      }\n    }, parseInt(String(Object.keys(item)).slice(0, 2)) == parseInt(String(new Date().getDate())) ? \"TODAY\" : Object.keys(item))) : \"\", /*#__PURE__*/React.createElement(\"p\", {\n      className: `chat__messages ${e.name === displayName && \"chat__reciever\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 29\n      }\n    }, e.name), /*#__PURE__*/React.createElement(Linkify, {\n      properties: {\n        target: \"_blank\",\n        style: {\n          color: \"red\",\n          fontWeight: \"bold\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 29\n      }\n    }, e.messageData), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 31\n      }\n    }, extramin = parseInt(String(new Date((_e$timestamp17 = e.timestamp) === null || _e$timestamp17 === void 0 ? void 0 : _e$timestamp17.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) > 60 ? (parseInt(String(new Date((_e$timestamp18 = e.timestamp) === null || _e$timestamp18 === void 0 ? void 0 : _e$timestamp18.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes)) % 60 : 0, minutes = parseInt(String(new Date((_e$timestamp19 = e.timestamp) === null || _e$timestamp19 === void 0 ? void 0 : _e$timestamp19.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix > 60 ? (parseInt(String(new Date((_e$timestamp20 = e.timestamp) === null || _e$timestamp20 === void 0 ? void 0 : _e$timestamp20.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix) % 60 : parseInt(String(new Date((_e$timestamp21 = e.timestamp) === null || _e$timestamp21 === void 0 ? void 0 : _e$timestamp21.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix, hour = extramin > 0 ? 1 : 0, hourly = parseInt(String(new Date((_e$timestamp22 = e.timestamp) === null || _e$timestamp22 === void 0 ? void 0 : _e$timestamp22.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT) > 24 ? (parseInt(String(new Date((_e$timestamp23 = e.timestamp) === null || _e$timestamp23 === void 0 ? void 0 : _e$timestamp23.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT)) % 24 : parseInt(String(new Date((_e$timestamp24 = e.timestamp) === null || _e$timestamp24 === void 0 ? void 0 : _e$timestamp24.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT)), hourly ? hourly % 12 : \"00\", \" : \", minutes !== 0 ? minutes < 10 ? \"0\" + minutes : minutes : \"00\", hourly > 12 ? \" PM\" : \" AM\"))) : /*#__PURE__*/React.createElement(\"p\", {\n      className: `chat__messages ${e.name === displayName && \"chat__reciever\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 27\n      }\n    }, e.name), /*#__PURE__*/React.createElement(Linkify, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 27\n      }\n    }, e.messageData), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"chat__timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 29\n      }\n    }, extramin = parseInt(String(new Date((_e$timestamp25 = e.timestamp) === null || _e$timestamp25 === void 0 ? void 0 : _e$timestamp25.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) > 60 ? (parseInt(String(new Date((_e$timestamp26 = e.timestamp) === null || _e$timestamp26 === void 0 ? void 0 : _e$timestamp26.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes)) % 60 : 0, minutes = parseInt(String(new Date((_e$timestamp27 = e.timestamp) === null || _e$timestamp27 === void 0 ? void 0 : _e$timestamp27.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix > 60 ? (parseInt(String(new Date((_e$timestamp28 = e.timestamp) === null || _e$timestamp28 === void 0 ? void 0 : _e$timestamp28.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix) % 60 : parseInt(String(new Date((_e$timestamp29 = e.timestamp) === null || _e$timestamp29 === void 0 ? void 0 : _e$timestamp29.toDate()).toUTCString()).slice(20, 22)) + parseInt(GMTminutes) + extramin - fix, hour = extramin > 0 ? 1 : 0, hourly = parseInt(String(new Date((_e$timestamp30 = e.timestamp) === null || _e$timestamp30 === void 0 ? void 0 : _e$timestamp30.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT) > 24 ? (parseInt(String(new Date((_e$timestamp31 = e.timestamp) === null || _e$timestamp31 === void 0 ? void 0 : _e$timestamp31.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT)) % 24 : parseInt(String(new Date((_e$timestamp32 = e.timestamp) === null || _e$timestamp32 === void 0 ? void 0 : _e$timestamp32.toDate()).toUTCString()).slice(17, 19)) + hour + parseInt(clientGMT)), hourly ? hourly % 12 : \"00\", \" : \", minutes !== 0 ? minutes < 10 ? \"0\" + minutes : minutes : \"00\", hourly > 12 ? \" PM\" : \" AM\"));\n  }) //  console.log(Object.keys(item))\n  // console.log(item[Object.keys(item)])\n  ) : // <div className=\"chat__body__daystamp\">\n  //     <p className=\"chat__body__daystamp__title\"></p>\n  //  </div>\n  // Object.entries(datewise).forEach(\n  //     ([key, value]) => {\n  //     {\n  //     value.forEach((item,i)=>{\n  //             console.log(item.messageData,item.name)\n  //         })\n  //     }\n  // }\n  // )\n  null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    id: \"chat__box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InsertEmoticonIcon, {\n    className: \"yellow\",\n    onClick: () => setEmoji(!emoji),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 15\n    }\n  }), emoji ? /*#__PURE__*/React.createElement(Picker, {\n    onSelect: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 24\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    type: \"text\",\n    placeholder: \"Type a message\",\n    onChange: e => setInput(e.target.value),\n    onClick: checkEmojiClose,\n    disabled: roomName === \"Admin: Abhilash\" ? (displayName == \"Abhilash Khuntia\" ? true : false) ? false : true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 15\n    }\n  }, \"Send A message\")))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/abhilashkhuntia/Desktop/whatsapp-clone/src/Chat.js"],"names":["React","useEffect","useState","useRef","Avatar","IconButton","AttachFile","MoreVertIcon","SearchOutlined","InsertEmoticonIcon","MicIcon","ArrowBackIcon","db","firebase","Link","useParams","useStateValue","actionTypes","UseWindowDimensions","useSound","Picker","Linkify","Chat","seed","setSeed","input","setInput","roomId","roomName","setRoomName","messages","setMessages","toggler","setToggler","displayName","localStorage","getItem","togglerState","dispatch","photoURL","emoji","setEmoji","issendChecked","setIssendChecked","datewise","setDateWise","clientGMT","setClinetGMT","lastseenPhoto","setLastseen","width","hour","extramin","minutes","hourly","GMTminutes","String","slice","scrl","fix","playOn","process","env","PUBLIC_URL","volume","playOff","addEmoji","e","native","checkEmojiClose","getTimeZone","offset","Date","getTimezoneOffset","o","Math","abs","floor","random","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","length","sendMessage","preventDefault","add","message","timestamp","firestore","FieldValue","serverTimestamp","blankObj","TotalObj","checkDate","blankArray","dateArray","forEach","i","messageDate","toDate","toUTCString","indexOf","push","index","messageData","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","handleDrawerToggle","type","SET_TOGGLER","item","Object","keys","parseInt","getDate","target","value","undefined","style","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport AttachFile from \"@material-ui/icons/AttachFile\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport \"./Chat.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\nimport UseWindowDimensions from \"./UseWindowDimensions\";\nimport useSound from \"use-sound\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport Linkify from \"react-linkify\";\n\nfunction Chat() {\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const { roomId } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [toggler, setToggler] = useState(true);\n  const displayName = localStorage.getItem(\"displayName\");\n  const [{ togglerState }, dispatch] = useStateValue();\n  const [{ photoURL }] = useStateValue();\n  const [emoji, setEmoji] = useState(false);\n  const [issendChecked, setIssendChecked] = useState(false);\n  const [datewise, setDateWise] = useState([]);\n  const [clientGMT, setClinetGMT] = useState(\"\");\n  const [lastseenPhoto, setLastseen] = useState(\"\");\n  // const [isRecChecked, setIsRecChecked]=useState(1);\n  const { width } = UseWindowDimensions();\n  var hour = 0,\n    extramin = 0,\n    minutes = 0,\n    hourly = 0,\n    GMTminutes = String(clientGMT).slice(4, 6),\n    scrl,\n    fix = 0;\n  // console.log(GMTminutes)\n\n  //console.log(roomId);\n\n  const [playOn] = useSound(`${process.env.PUBLIC_URL}/send.mp3`, {\n    volume: 0.5,\n  });\n  const [playOff] = useSound(`${process.env.PUBLIC_URL}/send.mp3`, {\n    volume: 0.5,\n  });\n\n  const addEmoji = (e) => {\n    let emoji = e.native;\n    setInput(input + emoji);\n  };\n  const checkEmojiClose = () => {\n    if (emoji) {\n      setEmoji(false);\n    }\n  };\n  //console.log(photoURL);\n  // console.log(messages);\n  function getTimeZone() {\n    var offset = new Date().getTimezoneOffset(),\n      o = Math.abs(offset);\n    return (\n      (offset < 0 ? \"+\" : \"-\") +\n      (\"00\" + Math.floor(o / 60)).slice(-2) +\n      \":\" +\n      (\"00\" + (o % 60)).slice(-2)\n    );\n  }\n  useEffect(() => {\n    setClinetGMT(getTimeZone());\n    //  console.log(clientGMT);\n  });\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n    if (roomId) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot((snapshot) => {\n          setRoomName(snapshot.data().name);\n        });\n\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot((snapshot) => {\n          setMessages(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n  }, [roomId]);\n  useEffect(() => {\n    setLastseen(messages[messages.length - 1]?.photoURL);\n  }, [messages]);\n\n  //  console.log(lastseenPhoto);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    // console.log(\"You Typedd >>>>\",input);\n    if (input.length > 0) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .add({\n          message: input,\n          name: displayName,\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          photoURL: localStorage.getItem(\"photoURL\"),\n        });\n      setIssendChecked(!issendChecked);\n      issendChecked ? playOff() : playOn();\n      setInput(\"\");\n    }\n  };\n\n  // for deletion in future\n\n  // let collectionRef = fs.collection(\"rooms\");\n  // collectionRef.where(\"name\", \"==\", name)\n  // .get()\n  // .then(querySnapshot => {\n  // querySnapshot.forEach((doc) => {\n  //     doc.ref.delete().then(() => {\n  //     console.log(\"Document successfully deleted!\");\n  //     }).catch(function(error) {\n  //     console.error(\"Error removing document: \", error);\n  //     });\n  // });\n  // })\n  // .catch(function(error) {\n  // console.log(\"Error getting documents: \", error);\n  // });\n\n  let blankObj = {};\n  let TotalObj = [];\n  if (messages.length > 0) {\n    // for( const message in messages){\n\n    // }\n    let checkDate = \"\";\n    let blankArray = [];\n    let dateArray = [];\n    messages.forEach(function (message, i) {\n      let messageDate = String(\n        new Date(message.timestamp?.toDate()).toUTCString()\n      ).slice(5, 12);\n      if (dateArray.indexOf(messageDate) === -1) {\n        dateArray.push(messageDate);\n      }\n    });\n    //let tempObj={};\n    var index = 0;\n    messages.forEach(function (message, i) {\n      let messageDate = String(\n        new Date(message.timestamp?.toDate()).toUTCString()\n      ).slice(5, 12);\n      // console.log((message.timestamp+new Date()?.getTimezoneOffset()))\n      if (messageDate === dateArray[index] && i == messages.length - 1) {\n        blankArray.push({\n          messageData: message.message,\n          name: message.name,\n          timestamp: message.timestamp,\n        });\n        blankObj[dateArray[index]] = blankArray;\n        TotalObj.push(blankObj);\n        blankObj = {};\n        blankArray = [];\n        blankArray.push({\n          messageData: message.message,\n          name: message.name,\n          timestamp: message.timestamp,\n        });\n        index = index + 1;\n      } else if (messageDate == dateArray[index]) {\n        blankArray.push({\n          messageData: message.message,\n          name: message.name,\n          timestamp: message.timestamp,\n        });\n      } else {\n        blankObj[dateArray[index]] = blankArray;\n        TotalObj.push(blankObj);\n        blankObj = {};\n        blankArray = [];\n        blankArray.push({\n          messageData: message.message,\n          name: message.name,\n          timestamp: message.timestamp,\n        });\n        if (messageDate != dateArray[index] && i == messages.length - 1) {\n          blankObj[messageDate] = blankArray;\n          TotalObj.push(blankObj);\n        }\n        index = index + 1;\n      }\n    });\n  }\n  useEffect(() => {\n    setDateWise(TotalObj);\n  }, [messages]);\n  //  console.log(TotalObj);\n  // if(Object.keys(datewise).length !== 0){\n  //     Object.entries(datewise).forEach(\n  //         ([key, value]) => {\n  //             console.log(key);\n  //             value.forEach((item,i)=>{\n  //                 console.log(item.messageData,item.name);\n  //             });\n  //         }\n  //     );\n  // }\n\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n    // console.log('called')\n  };\n  useEffect(() => {\n    scrollToBottom();\n  });\n\n  useEffect(() => {\n    setToggler(!toggler);\n  }, [togglerState]);\n\n  useEffect(() => {\n    scrollToBottom();\n    //   scrl= document.getElementById(\"chat__box\")\n    //  console.log(messagesEndRef.current.clientHeight);\n    //  scrl.scrollIntoView(false);\n  }, [messages]);\n  const handleDrawerToggle = () => {\n    setToggler(!toggler);\n    dispatch({\n      type: actionTypes.SET_TOGGLER,\n      togglerState: togglerState + 1,\n    });\n  };\n  return (\n    <>\n      {width < 629 ? (\n        <div className={togglerState % 2 === 0 ? \"chat\" : \"chat hide__chat\"}>\n          <div className=\"chat__header\">\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n            <Avatar src={lastseenPhoto} />\n            <div className=\"chat__headerInfo\">\n              <h3>{roomName}</h3>\n              <p className=\"header__lastSeen\">\n                last seen{\" \"}\n                {messages.length !== 0\n                  ? messages[messages.length - 1].timestamp\n                      ?.toDate()\n                      .toUTCString()\n                  : \"\"}\n              </p>\n            </div>\n            <div className=\"chat__headerRight\">\n              <IconButton>\n                <SearchOutlined />\n              </IconButton>\n              <IconButton>\n                <AttachFile />\n              </IconButton>\n              <IconButton>\n                <MoreVertIcon />\n              </IconButton>\n            </div>\n          </div>\n          <div className=\"chat__header__absolute\">\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n            <Avatar src={lastseenPhoto} />\n            <div className=\"chat__headerInfo\">\n              <h3>{roomName}</h3>\n              <p className=\"header__lastSeen\">\n                last seen{\" \"}\n                {messages.length !== 0\n                  ? String(\n                      messages[messages.length - 1].timestamp\n                        ?.toDate()\n                        .toUTCString()\n                    ).slice(0, 22)\n                  : \"\"}\n              </p>\n            </div>\n            <div className=\"chat__headerRight\">\n              <IconButton>\n                <SearchOutlined />\n              </IconButton>\n              <IconButton>\n                <AttachFile />\n              </IconButton>\n              <IconButton>\n                <MoreVertIcon />\n              </IconButton>\n            </div>\n          </div>\n          <div className=\"chat__body\">\n            {datewise.length > 0\n              ? datewise.map(\n                  (item, i) =>\n                    //  <div className=\"chat__body__daystamp\">\n                    //     <p className=\"chat__body__daystamp__title\">{Object.keys(item)}</p>\n                    //  </div>\n                    item[Object.keys(item)].map((e, i) =>\n                      i == 0 ? (\n                        <>\n                          {String(Object.keys(item)).slice(0, 2) !== \"id\" &&\n                          parseInt(String(Object.keys(item)).slice(0, 2)) ? (\n                            <div className=\"chat__body__daystamp\">\n                              <p className=\"chat__body__daystamp__title\">\n                                {parseInt(\n                                  String(Object.keys(item)).slice(0, 2)\n                                ) == parseInt(String(new Date().getDate()))\n                                  ? \"TODAY\"\n                                  : Object.keys(item)}\n                              </p>\n                            </div>\n                          ) : null}\n                          <p\n                            className={`chat__messages ${\n                              e.name === displayName && \"chat__reciever\"\n                            }`}\n                          >\n                            <span className=\"chat__name\">\n                              {e.name}\n                            </span>\n                            <Linkify>{e.messageData}</Linkify>\n                            <span className=\"chat__timestamp\">\n                              <div className=\"hidden\">\n                                {\n                                  (extramin =\n                                    parseInt(\n                                      String(\n                                        new Date(\n                                          e.timestamp?.toDate()\n                                        ).toUTCString()\n                                      ).slice(20, 22)\n                                    ) +\n                                      parseInt(GMTminutes) >\n                                    60\n                                      ? (parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(20, 22)\n                                        ) +\n                                          parseInt(GMTminutes)) %\n                                        60\n                                      : 0)\n                                }\n\n                                {\n                                  (minutes =\n                                    parseInt(\n                                      String(\n                                        new Date(\n                                          e.timestamp?.toDate()\n                                        ).toUTCString()\n                                      ).slice(20, 22)\n                                    ) +\n                                      parseInt(GMTminutes) +\n                                      extramin -\n                                      fix >\n                                    60\n                                      ? (parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(20, 22)\n                                        ) +\n                                          parseInt(GMTminutes) +\n                                          extramin -\n                                          fix) %\n                                        60\n                                      : parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(20, 22)\n                                        ) +\n                                        parseInt(GMTminutes) +\n                                        extramin -\n                                        fix)\n                                }\n                                {(hour = extramin > 0 ? 1 : 0)}\n\n                                {\n                                  (hourly =\n                                    parseInt(\n                                      String(\n                                        new Date(\n                                          e.timestamp?.toDate()\n                                        ).toUTCString()\n                                      ).slice(17, 19)\n                                    ) +\n                                      hour +\n                                      parseInt(clientGMT) >\n                                    24\n                                      ? (parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(17, 19)\n                                        ) +\n                                          hour +\n                                          parseInt(clientGMT)) %\n                                        24\n                                      : parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(17, 19)\n                                        ) +\n                                        hour +\n                                        parseInt(clientGMT))\n                                }\n                              </div>\n                              {hourly ? hourly % 12 : \"00\"}\n                              {\" : \"}\n                              {minutes !== 0\n                                ? minutes < 10\n                                  ? \"0\" + minutes\n                                  : minutes\n                                : \"00\"}\n                              {hourly > 12 ? \" PM\" : \" AM\"}\n                            </span>\n                          </p>\n                        </>\n                      ) : (\n                        <p\n                          className={`chat__messages ${\n                            e.name === displayName && \"chat__reciever\"\n                          }`}\n                        >\n                          <span className=\"chat__name\">\n                            {e.name}\n                          </span>\n                          <Linkify>{e.messageData}</Linkify>\n                          <span className=\"chat__timestamp\">\n                            <div className=\"hidden\">\n                              {\n                                (extramin =\n                                  parseInt(\n                                    String(\n                                      new Date(\n                                        e.timestamp?.toDate()\n                                      ).toUTCString()\n                                    ).slice(20, 22)\n                                  ) +\n                                    parseInt(GMTminutes) >\n                                  60\n                                    ? (parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(20, 22)\n                                      ) +\n                                        parseInt(GMTminutes)) %\n                                      60\n                                    : 0)\n                              }\n\n                              {\n                                (minutes =\n                                  parseInt(\n                                    String(\n                                      new Date(\n                                        e.timestamp?.toDate()\n                                      ).toUTCString()\n                                    ).slice(20, 22)\n                                  ) +\n                                    parseInt(GMTminutes) +\n                                    extramin -\n                                    fix >\n                                  60\n                                    ? (parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(20, 22)\n                                      ) +\n                                        parseInt(GMTminutes) +\n                                        extramin -\n                                        fix) %\n                                      60\n                                    : parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(20, 22)\n                                      ) +\n                                      parseInt(GMTminutes) +\n                                      extramin -\n                                      fix)\n                              }\n                              {(hour = extramin > 0 ? 1 : 0)}\n\n                              {\n                                (hourly =\n                                  parseInt(\n                                    String(\n                                      new Date(\n                                        e.timestamp?.toDate()\n                                      ).toUTCString()\n                                    ).slice(17, 19)\n                                  ) +\n                                    hour +\n                                    parseInt(clientGMT) >\n                                  24\n                                    ? (parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(17, 19)\n                                      ) +\n                                        hour +\n                                        parseInt(clientGMT)) %\n                                      24\n                                    : parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(17, 19)\n                                      ) +\n                                      hour +\n                                      parseInt(clientGMT))\n                              }\n                            </div>\n                            {hourly ? hourly % 12 : \"00\"}\n                            {\" : \"}\n                            {minutes !== 0\n                              ? minutes < 10\n                                ? \"0\" + minutes\n                                : minutes\n                              : \"00\"}\n                            {hourly > 12 ? \" PM\" : \" AM\"}\n                          </span>\n                        </p>\n                      )\n                    )\n                  //  console.log(Object.keys(item))\n                  // console.log(item[Object.keys(item)])\n                )\n              : // <div className=\"chat__body__daystamp\">\n                //     <p className=\"chat__body__daystamp__title\"></p>\n                //  </div>\n                // Object.entries(datewise).forEach(\n                //     ([key, value]) => {\n\n                //     {\n                //     value.forEach((item,i)=>{\n                //             console.log(item.messageData,item.name)\n                //         })\n                //     }\n                // }\n                // )\n\n                null}\n            <div ref={messagesEndRef}></div>\n          </div>\n\n          <div className=\"chat__footer\">\n  \n            <IconButton>\n              <InsertEmoticonIcon\n                className=\"yellow\"\n                onClick={() => setEmoji(!emoji)}\n              />\n              {emoji ? <Picker onSelect={addEmoji} /> : null}\n            </IconButton>\n\n            <form>\n              <input\n                value={input}\n                type=\"text\"\n                placeholder=\"Type a message\"\n                onChange={(e) => setInput(e.target.value)}\n                onClick={checkEmojiClose}\n                disabled={\n                  roomName === \"Admin: Abhilash\"\n                    ? (displayName == \"Abhilash Khuntia\" ? true : false)\n                      ? false\n                      : true\n                    : false\n                }\n              />\n              <button type=\"submit\" onClick={sendMessage}>\n                Send A message\n              </button>\n            </form>\n          </div>\n\n          <div className=\"chat__footer__absolute\">\n            <IconButton>\n              <InsertEmoticonIcon />\n            </IconButton>\n            <form>\n              <input\n                value={input}\n                type=\"text\"\n                placeholder=\"Type a message\"\n                onChange={(e) => setInput(e.target.value)}\n                disabled={roomName == \"Admin: Abhilash\" ? true : false}\n              />\n              <button type=\"submit\" onClick={sendMessage}>\n                Send A message\n              </button>\n            </form>\n          </div>\n        </div>\n      ) : (\n        <div className={\"chat\"}>\n          <div className=\"chat__header\">\n            <Avatar src={lastseenPhoto} />\n            <div className=\"chat__headerInfo\">\n              <h3>{roomName}</h3>\n              <p className=\"header__lastSeen\">\n                \n                {messages.length !== 0\n                  ? String(\n                      messages[messages.length - 1].timestamp\n                        ?.toDate()\n                        .toUTCString()\n                    ).slice(0, 22)\n                  : \"\"}\n              </p>\n            </div>\n            <div className=\"chat__headerRight\">\n              <IconButton>\n                <SearchOutlined />\n              </IconButton>\n              <IconButton>\n                <AttachFile />\n              </IconButton>\n              <IconButton>\n                <MoreVertIcon />\n              </IconButton>\n            </div>\n          </div>\n          <div\n            className=\"chat__body scrollbar-juicy-peach\"\n            onClick={checkEmojiClose}\n          >\n            {datewise.length > 0\n              ? datewise.map(\n                  (item, i) =>\n                    item[Object.keys(item)].map((e, i) =>\n                      i == 0 ? (\n                        <>\n                          {String(Object.keys(item))?.slice(0, 2) !== \"id\" &&\n                          Object.keys(item) != undefined ? (\n                            <div className=\"chat__body__daystamp\">\n                              <p className=\"chat__body__daystamp__title\">\n                                {parseInt(\n                                  String(Object.keys(item)).slice(0, 2)\n                                ) == parseInt(String(new Date().getDate()))\n                                  ? \"TODAY\"\n                                  : Object.keys(item)}\n                              </p>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n                          <p\n                            className={`chat__messages ${\n                              e.name === displayName && \"chat__reciever\"\n                            }`}\n                          >\n                            <span className=\"chat__name\">\n                              {e.name}\n                            </span>\n                            <Linkify\n                              properties={{\n                                target: \"_blank\",\n                                style: { color: \"red\", fontWeight: \"bold\" },\n                              }}\n                            >\n                              {e.messageData}\n                            </Linkify>\n                            <span className=\"chat__timestamp\">\n                              <div className=\"hidden\">\n                                {\n                                  (extramin =\n                                    parseInt(\n                                      String(\n                                        new Date(\n                                          e.timestamp?.toDate()\n                                        ).toUTCString()\n                                      ).slice(20, 22)\n                                    ) +\n                                      parseInt(GMTminutes) >\n                                    60\n                                      ? (parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(20, 22)\n                                        ) +\n                                          parseInt(GMTminutes)) %\n                                        60\n                                      : 0)\n                                }\n\n                                {\n                                  (minutes =\n                                    parseInt(\n                                      String(\n                                        new Date(\n                                          e.timestamp?.toDate()\n                                        ).toUTCString()\n                                      ).slice(20, 22)\n                                    ) +\n                                      parseInt(GMTminutes) +\n                                      extramin -\n                                      fix >\n                                    60\n                                      ? (parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(20, 22)\n                                        ) +\n                                          parseInt(GMTminutes) +\n                                          extramin -\n                                          fix) %\n                                        60\n                                      : parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(20, 22)\n                                        ) +\n                                        parseInt(GMTminutes) +\n                                        extramin -\n                                        fix)\n                                }\n                                {(hour = extramin > 0 ? 1 : 0)}\n\n                                {\n                                  (hourly =\n                                    parseInt(\n                                      String(\n                                        new Date(\n                                          e.timestamp?.toDate()\n                                        ).toUTCString()\n                                      ).slice(17, 19)\n                                    ) +\n                                      hour +\n                                      parseInt(clientGMT) >\n                                    24\n                                      ? (parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(17, 19)\n                                        ) +\n                                          hour +\n                                          parseInt(clientGMT)) %\n                                        24\n                                      : parseInt(\n                                          String(\n                                            new Date(\n                                              e.timestamp?.toDate()\n                                            ).toUTCString()\n                                          ).slice(17, 19)\n                                        ) +\n                                        hour +\n                                        parseInt(clientGMT))\n                                }\n                              </div>\n                              {hourly ? hourly % 12 : \"00\"}\n                              {\" : \"}\n                              {minutes !== 0\n                                ? minutes < 10\n                                  ? \"0\" + minutes\n                                  : minutes\n                                : \"00\"}\n                              {hourly > 12 ? \" PM\" : \" AM\"}\n                            </span>\n                          </p>\n                        </>\n                      ) : (\n                        <p\n                          className={`chat__messages ${\n                            e.name === displayName && \"chat__reciever\"\n                          }`}\n                        >\n                          <span className=\"chat__name\">\n                            {e.name}\n                          </span>\n                          <Linkify>{e.messageData}</Linkify>\n                          <span className=\"chat__timestamp\">\n                            <div className=\"hidden\">\n                              {\n                                (extramin =\n                                  parseInt(\n                                    String(\n                                      new Date(\n                                        e.timestamp?.toDate()\n                                      ).toUTCString()\n                                    ).slice(20, 22)\n                                  ) +\n                                    parseInt(GMTminutes) >\n                                  60\n                                    ? (parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(20, 22)\n                                      ) +\n                                        parseInt(GMTminutes)) %\n                                      60\n                                    : 0)\n                              }\n\n                              {\n                                (minutes =\n                                  parseInt(\n                                    String(\n                                      new Date(\n                                        e.timestamp?.toDate()\n                                      ).toUTCString()\n                                    ).slice(20, 22)\n                                  ) +\n                                    parseInt(GMTminutes) +\n                                    extramin -\n                                    fix >\n                                  60\n                                    ? (parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(20, 22)\n                                      ) +\n                                        parseInt(GMTminutes) +\n                                        extramin -\n                                        fix) %\n                                      60\n                                    : parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(20, 22)\n                                      ) +\n                                      parseInt(GMTminutes) +\n                                      extramin -\n                                      fix)\n                              }\n                              {(hour = extramin > 0 ? 1 : 0)}\n\n                              {\n                                (hourly =\n                                  parseInt(\n                                    String(\n                                      new Date(\n                                        e.timestamp?.toDate()\n                                      ).toUTCString()\n                                    ).slice(17, 19)\n                                  ) +\n                                    hour +\n                                    parseInt(clientGMT) >\n                                  24\n                                    ? (parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(17, 19)\n                                      ) +\n                                        hour +\n                                        parseInt(clientGMT)) %\n                                      24\n                                    : parseInt(\n                                        String(\n                                          new Date(\n                                            e.timestamp?.toDate()\n                                          ).toUTCString()\n                                        ).slice(17, 19)\n                                      ) +\n                                      hour +\n                                      parseInt(clientGMT))\n                              }\n                            </div>\n                            {hourly ? hourly % 12 : \"00\"}\n                            {\" : \"}\n                            {minutes !== 0\n                              ? minutes < 10\n                                ? \"0\" + minutes\n                                : minutes\n                              : \"00\"}\n                            {hourly > 12 ? \" PM\" : \" AM\"}\n                          </span>\n                        </p>\n                      )\n                    )\n                  //  console.log(Object.keys(item))\n                  // console.log(item[Object.keys(item)])\n                )\n              : // <div className=\"chat__body__daystamp\">\n                //     <p className=\"chat__body__daystamp__title\"></p>\n                //  </div>\n                // Object.entries(datewise).forEach(\n                //     ([key, value]) => {\n\n                //     {\n                //     value.forEach((item,i)=>{\n                //             console.log(item.messageData,item.name)\n                //         })\n                //     }\n                // }\n                // )\n\n                null}\n            <div ref={messagesEndRef} id=\"chat__box\"></div>\n          </div>\n\n          <div className=\"chat__footer\">\n            <IconButton>\n              {/* <InsertEmoticonIcon /> */}\n              <InsertEmoticonIcon\n                className=\"yellow\"\n                onClick={() => setEmoji(!emoji)}\n              />\n              {emoji ? <Picker onSelect={addEmoji} /> : null}\n            </IconButton>\n            <form>\n              <input\n                value={input}\n                type=\"text\"\n                placeholder=\"Type a message\"\n                onChange={(e) => setInput(e.target.value)}\n                onClick={checkEmojiClose}\n                disabled={\n                  roomName === \"Admin: Abhilash\"\n                    ? (displayName == \"Abhilash Khuntia\" ? true : false)\n                      ? false\n                      : true\n                    : false\n                }\n              />\n              <button type=\"submit\" onClick={sendMessage}>\n                Send A message\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}