{"ast":null,"code":"var _jsxFileName = \"/Users/abhilashkhuntia/Desktop/whatsapp-clone/src/SidebarChat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./SidebarChat.css\";\nimport db from \"./firebase\";\nimport { Link } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport firebase from \"firebase\";\nimport { password } from \"./constants\";\n\nfunction SidebarChat(props) {\n  var _messages$, _messages$2, _messages$3;\n\n  const [seed, setSeed] = useState(\"\");\n  const {\n    addNewChatVal,\n    name,\n    id\n  } = props;\n  const [messages, setMessages] = useState([]);\n  const [{\n    togglerState\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (id) {\n      db.collection(\"rooms\").doc(id).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, []);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const deleteRoom = () => {\n    const passwordVerify = prompt(\"Enter Admin Password to delete Room\");\n\n    if (passwordVerify == password) {\n      db.collection(\"rooms\").doc(id).delete().then(function () {\n        window.location = \"/\";\n      }).catch(function (error) {\n        console.error(\"Error removing document: \", error);\n      });\n    } else {\n      alert(\"You are not authorised to delete rooms\");\n    }\n  };\n\n  const createChat = () => {\n    const roomName = prompt(\"Please enter name for chat\");\n\n    if (roomName && roomName.length >= 20) {\n      return alert(\"enter a shorter name for the room\");\n    }\n\n    if (roomName) {\n      db.collection(\"rooms\").add({\n        name: roomName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n    }\n  };\n\n  const handleChat = () => {\n    dispatch({\n      type: actionTypes.SET_TOGGLER,\n      togglerState: togglerState + 1\n    });\n  };\n\n  return addNewChatVal !== \"true\" ? /*#__PURE__*/React.createElement(Link, {\n    to: `/rooms/${id}`,\n    onClick: handleChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: (_messages$ = messages[0]) === null || _messages$ === void 0 ? void 0 : _messages$.photoURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebarChat__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"room__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sidebar__lastmessages__color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sidebar__lastMessageName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, id != \"\" && messages.length > 0 ? ((_messages$2 = messages[0]) === null || _messages$2 === void 0 ? void 0 : _messages$2.name) + \": \" : \"Loading: \"), id != \"\" && messages.length > 0 ? (_messages$3 = messages[0]) === null || _messages$3 === void 0 ? void 0 : _messages$3.message : \"Start a new chat\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n    onClick: createChat,\n    className: \"sidebarChat addnew__chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Add New Room\"), /*#__PURE__*/React.createElement(AddCircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SidebarChat;","map":{"version":3,"sources":["/Users/abhilashkhuntia/Desktop/whatsapp-clone/src/SidebarChat.js"],"names":["React","useEffect","useState","Avatar","db","Link","useStateValue","actionTypes","AddCircleIcon","DeleteIcon","firebase","password","SidebarChat","props","seed","setSeed","addNewChatVal","name","id","messages","setMessages","togglerState","dispatch","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","deleteRoom","passwordVerify","prompt","delete","then","window","location","catch","error","console","alert","createChat","roomName","length","add","timestamp","firestore","FieldValue","serverTimestamp","handleChat","type","SET_TOGGLER","photoURL","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./SidebarChat.css\";\nimport db from \"./firebase\";\nimport { Link } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport firebase from \"firebase\";\nimport { password } from \"./constants\";\nfunction SidebarChat(props) {\n  const [seed, setSeed] = useState(\"\");\n  const { addNewChatVal, name, id } = props;\n  const [messages, setMessages] = useState([]);\n  const [{ togglerState }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    if (id) {\n      db.collection(\"rooms\")\n        .doc(id)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n  }, []);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n  const deleteRoom = () => {\n    const passwordVerify = prompt(\"Enter Admin Password to delete Room\");\n    if (passwordVerify == password) {\n      db.collection(\"rooms\")\n        .doc(id)\n        .delete()\n        .then(function () {\n          window.location = \"/\";\n        })\n        .catch(function (error) {\n          console.error(\"Error removing document: \", error);\n        });\n    } else {\n      alert(\"You are not authorised to delete rooms\");\n    }\n  };\n\n  const createChat = () => {\n    const roomName = prompt(\"Please enter name for chat\");\n    if (roomName && roomName.length >= 20) {\n      return alert(\"enter a shorter name for the room\");\n    }\n    if (roomName) {\n      db.collection(\"rooms\").add({\n        name: roomName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n  };\n\n  const handleChat = () => {\n    dispatch({\n      type: actionTypes.SET_TOGGLER,\n      togglerState: togglerState + 1,\n    });\n  };\n\n  return addNewChatVal !== \"true\" ? (\n    <Link to={`/rooms/${id}`} onClick={handleChat}>\n      <div className=\"sidebarChat\">\n        <div className=\"sidebarChat__wrapper\">\n          <Avatar src={messages[0]?.photoURL} />\n          <div className=\"sidebarChat__info\">\n            <h2 className=\"room__name\">{name}</h2>\n            <p className=\"sidebar__lastmessages__color\">\n              <span className=\"sidebar__lastMessageName\">\n                {id != \"\" && messages.length > 0\n                  ? messages[0]?.name + \": \"\n                  : \"Loading: \"}\n              </span>\n              {id != \"\" && messages.length > 0\n                ? messages[0]?.message\n                : \"Start a new chat\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </Link>\n  ) : (\n    <div onClick={createChat} className=\"sidebarChat addnew__chat\">\n      <h2>Add New Room</h2>\n      <AddCircleIcon />\n    </div>\n  );\n}\n\nexport default SidebarChat;\n"]},"metadata":{},"sourceType":"module"}